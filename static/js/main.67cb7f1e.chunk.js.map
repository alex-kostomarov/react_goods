{"version":3,"sources":["api/goods.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["API_URL","delay","Promise","resolve","setTimeout","getAll","a","fetch","then","response","json","get5First","goods","sort","goodA","goodB","name","localeCompare","sortedGoods","slice","getRedGoods","filter","good","color","GoodsList","map","id","style","App","state","isLoading","loadingError","loadData","getGoods","setState","this","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAGMA,EAAO,wEAGb,SAASC,EAAMA,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAG7C,SAAeI,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACCL,EAAM,KADP,gCAGEM,MAAMP,GACVQ,MAAK,SAAAC,GACJ,OAAOA,EAASC,WALf,4C,sBASA,IAAMC,EAAY,WACvB,OAAON,IACJG,MAAK,SAAAI,GAAK,OAAIA,EAAMC,MAAK,SAACC,EAAaC,GAAd,OACxBD,EAAME,KAAKC,cAAcF,EAAMC,YAEhCR,MAAK,SAAAU,GAAW,OAAI,YAAIA,GAAaC,MAAM,EAAG,OAGtCC,EAAc,WACzB,OAAOf,IACJG,MAAK,SAAAI,GAAK,OAAIA,EAAMS,QAAO,SAACC,GAAD,MAA+B,QAAfA,EAAKC,a,OCvBxCC,EAA6B,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMO,EAAb,EAAaA,MAAb,OACT,oBAAaI,MAAO,CAAEJ,SAAtB,SACGP,GADMU,SCGXE,E,4MACJC,MAAe,CACbjB,MAAO,GACPkB,WAAW,EACXC,cAAc,G,EAGhBC,S,uCAAW,WAAOC,GAAP,eAAA3B,EAAA,6DACT,EAAK4B,SAAS,CACZJ,WAAW,EACXC,cAAc,IAHP,kBAOaE,IAPb,OAODrB,EAPC,OASP,EAAKsB,SAAS,CACZtB,QACAkB,WAAW,IAXN,gDAcP,EAAKI,SAAS,CACZH,cAAc,EACdD,WAAW,IAhBN,yD,kGAqBX,WAAU,IAAD,OACP,EAA2CK,KAAKN,MAAxCjB,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,aAE1B,OACE,sBAAKK,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKN,SAAS3B,IAHlB,4BASA,wBACEgC,KAAK,SACLC,QAAS,WACP,EAAKN,SAASrB,IAHlB,gCASA,wBACE0B,KAAK,SACLC,QAAS,WACP,EAAKN,SAASZ,IAHlB,4BASCW,GAAgB,8CAEhBD,EAAY,2CAAoB,cAAC,EAAD,CAAWlB,MAAOA,W,GAhEzC2B,IAAMC,WAsETZ,IChFfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67cb7f1e.chunk.js","sourcesContent":["import { Good } from '../types';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\n// server response delay emulation\nfunction delay(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getAll(): Promise<Good[]> {\n  await delay(1000);\n\n  return fetch(API_URL)\n    .then(response => {\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((goodA: Good, goodB: Good) => (\n      goodA.name.localeCompare(goodB.name)\n    )))\n    .then(sortedGoods => [...sortedGoods].slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter((good: Good) => good.color === 'red'));\n};\n","import { Good } from '../types';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(({ id, name, color }) => (\n        <li key={id} style={{ color }}>\n          {name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types';\nimport { GoodsList } from './components/GoodsList';\n\ntype State = {\n  goods: Good[];\n  isLoading: boolean;\n  loadingError: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n    isLoading: false,\n    loadingError: false,\n  };\n\n  loadData = async (getGoods: () => Promise<Good[]>) => {\n    this.setState({\n      isLoading: true,\n      loadingError: false,\n    });\n\n    try {\n      const goods = await getGoods();\n\n      this.setState({\n        goods,\n        isLoading: false,\n      });\n    } catch {\n      this.setState({\n        loadingError: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    const { goods, isLoading, loadingError } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadData(getAll);\n          }}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadData(get5First);\n          }}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.loadData(getRedGoods);\n          }}\n        >\n          Load red goods\n        </button>\n\n        {loadingError && <p>Loading error</p>}\n\n        {isLoading ? <p>Loading...</p> : <GoodsList goods={goods} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}